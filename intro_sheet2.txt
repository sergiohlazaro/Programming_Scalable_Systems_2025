- Apunte:
    * Limpia la compilaci칩n anterior

        $mix clean
        $mix compile

    * Ejecutar nuevamente los test

        $mix test

游늭 Creaci칩n del Proyecto con mix:

    $mix new sheet2
    $cd sheet2

游늭 Trabajaremos en:

lib/sheet2.ex   # Aqu칤 implementaremos las funciones
test/sheet2_test.exs  # Aqu칤 pondremos los tests proporcionados

- Abre lib/sheet2.ex y define el m칩dulo Sheet2:

    defmodule Sheet2 do
        # Aqu칤 van las funciones de los ejercicios
    end

游늭 Agregar los Tests:

- Crea el archivo test/sheet2_test.exs y copia el contenido del test que proporcionan.

- Para asegurarnos de que ExUnit est칠 configurado correctamente, a침ade ExUnit.start() al inicio del archivo (no es necesario si no da problemas):

    ExUnit.start()
    defmodule Sheet2Test do
        use ExUnit.Case

        # Aqu칤 van los tests
    end

- Copia el test proporcionado dentro de Sheet2Test.

- Para ejecutar los tests en cualquier momento, usa:

    $mix test

游늭 Implementar los ejercicios:

- Ejercicio 1: len/1 - Longitud de una lista

    defmodule Sheet2 do
        def len([]), do: 0
        def len([_ | tail]), do: 1 + len(tail)
    end

- Ejercicio 2: app/2 - Concatenar listas

    defmodule Sheet2 do
        def app([], list2), do: list2
        def app([head | tail], list2), do: [head | app(tail, list2)]
    end

- Ejercicio 3: fib/1 - Fibonacci

    defmodule Sheet2 do
        def fib(1), do: 1
        def fib(2), do: 1
        def fib(n), do: fib(n - 1) + fib(n - 2)
    end

- Ejercicio 4: gcd/2 - M치ximo com칰n divisor (Algoritmo de Euclides)

    defmodule Sheet2 do
        def gcd(n, 0), do: n
        def gcd(n, m), do: gcd(m, rem(n, m))
    end

- El resto de ejercicios est치n resueltos en el c칩digo.
